openapi: 3.1.0
info:
  title: SHREW
  version: v1
servers:
  - url: http://localhost:8080
    description: Generated server url
security:
  - basicAuth: []
tags:
  - name: Flat API
    description: API для управления квартирами
paths:
  /api/flats/{id}:
    get:
      tags:
        - Flat API
      summary: Получить квартиру по ID
      operationId: getFlat
      parameters:
        - name: id
          in: path
          description: ID квартиры
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Flat'
    put:
      tags:
        - Flat API
      summary: Обновить квартиру
      operationId: updateFlat
      parameters:
        - name: id
          in: path
          description: ID квартиры
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlatDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Flat'
    delete:
      tags:
        - Flat API
      summary: Удалить квартиру по ID
      operationId: deleteFlat
      parameters:
        - name: id
          in: path
          description: ID квартиры
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
  /api/flats:
    get:
      tags:
        - Flat API
      summary: Получить список квартир
      operationId: getAllFlats
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Flat'
    post:
      tags:
        - Flat API
      summary: Добавить новую квартиру
      operationId: createFlat
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlatDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Flat'
  /api/flats/unique-living-spaces:
    get:
      tags:
        - Flat API
      summary: Получить уникальные значения жилой площади
      operationId: getUniqueLivingSpaces
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: number
                  format: double
                uniqueItems: true
  /api/flats/rooms-greater-than/{rooms}:
    get:
      tags:
        - Flat API
      summary: Получить квартиры с количеством комнат больше указанного
      operationId: getFlatsWithMoreRooms
      parameters:
        - name: rooms
          in: path
          description: Минимальное количество комнат
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Flat'
  /api/agency/get-most-expensive/{id1}/{id2}/{id3}:
    get:
      tags:
        - agency-controller
      summary: Выбрать наиболее дорогую квартиру из трёх
      operationId: getMostExpensive
      parameters:
        - name: id1
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: id2
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: id3
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties: {}
  /api/agency/find-with-balcony/{cheapest}/{withBalcony}:
    get:
      tags:
        - agency-controller
      summary: Найти самую дешёвую/дорогую квартиру с балконом/без балкона
      operationId: findWithBalcony
      parameters:
        - name: cheapest
          in: path
          required: true
          schema:
            type: boolean
        - name: withBalcony
          in: path
          required: true
          schema:
            type: boolean
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties: {}
  /api/flats/by-furnish/{furnish}:
    delete:
      tags:
        - Flat API
      summary: Удалить квартиры по типу отделки
      operationId: deleteByFurnish
      parameters:
        - name: furnish
          in: path
          description: Тип отделки
          required: true
          schema:
            type: string
            enum:
              - DESIGNER
              - NONE
              - FINE
              - BAD
              - LITTLE
      responses:
        '200':
          description: OK
components:
  schemas:
    Coordinates:
      type: object
      properties:
        x:
          type: integer
          format: int64
          description: Значение должно быть больше -13. Поле не может быть null
          minimum: -12.999
          title: Координата X
        y:
          type: number
          format: float
          description: Значение должно быть больше -733
          minimum: -732.999
          title: Координата Y
      required:
        - x
        - y
    FlatDto:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          title: Название квартиры
        coordinates:
          $ref: '#/components/schemas/Coordinates'
          title: Координаты
        area:
          type: integer
          format: int32
          description: Максимальное значение 784, должно быть больше 0
          maximum: 784
          minimum: 1
          title: Площадь
        number_of_rooms:
          type: integer
          format: int32
          description: Максимальное значение 8, должно быть больше 0
          maximum: 8
          minimum: 1
          title: Количество комнат
        living_space:
          type: number
          format: double
          title: Жилая площадь
        furnish:
          type: string
          enum:
            - DESIGNER
            - NONE
            - FINE
            - BAD
            - LITTLE
          title: Отделка
        transport:
          type: string
          enum:
            - FEW
            - NONE
            - LITTLE
            - ENOUGH
          title: Транспортная доступность
        house:
          $ref: '#/components/schemas/House'
          title: Дом
      required:
        - area
        - coordinates
        - house
        - living_space
        - name
        - number_of_rooms
        - transport
    House:
      type: object
      properties:
        name:
          type: string
          title: Имя дома
        year:
          type: integer
          format: int64
          maximum: 370
          minimum: 1
          title: Год
        number_of_floors:
          type: integer
          format: int32
          minimum: 1
          title: Количество этажей
        number_of_lifts:
          type: integer
          format: int32
          minimum: 1
          title: Количество лифтов
      required:
        - number_of_floors
        - number_of_lifts
        - year
    Flat:
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: Генерируется автоматически, должно быть больше 0 и уникальным
          minimum: 1
          readOnly: true
          title: ID квартиры
        creationDate:
          type: string
          format: date
          description: Генерируется автоматически
          readOnly: true
          title: Дата создания
        name:
          type: string
          minLength: 1
          title: Название квартиры
        coordinates:
          $ref: '#/components/schemas/Coordinates'
          title: Координаты
        area:
          type: integer
          format: int32
          description: Максимальное значение 784, должно быть больше 0
          maximum: 784
          minimum: 1
          title: Площадь
        number_of_rooms:
          type: integer
          format: int32
          description: Максимальное значение 8, должно быть больше 0
          maximum: 8
          minimum: 1
          title: Количество комнат
        living_space:
          type: number
          format: double
          title: Жилая площадь
        furnish:
          type: string
          enum:
            - DESIGNER
            - NONE
            - FINE
            - BAD
            - LITTLE
          title: Отделка
        transport:
          type: string
          enum:
            - FEW
            - NONE
            - LITTLE
            - ENOUGH
          title: Транспортная доступность
        house:
          $ref: '#/components/schemas/House'
          title: Дом
      required:
        - area
        - coordinates
        - house
        - living_space
        - name
        - number_of_rooms
        - transport